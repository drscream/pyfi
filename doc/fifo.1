.TH fifo 1  "Jan 1, 2014" "version 0.1.18" "USER COMMANDS"
.SH NAME
fifo \- Project FiFo console API client
.SH SYNOPSIS
.B fifo
[\-h|\-\-help] [\-v|\-\-version] [\-c|\-\-config config] [\-\-host host]
[\-u|\-\-user user] [\-P|\-\-password password] {datasets, dtrace, groups,
hypervisors, ipranges, networks, orgs, packages, users, vms} <command>
.SH DESCRIPTION
This program allows to use the HTTP/REST API provided by Project FiFo from
the console and interact with it in a scripted manner.
.PP
Configuration data for the endpoint can either be passed via the command line
arguments or via the config file located (~/.fifo).
.SH OPTIONS
.TP
\-h|\-\-help
display a short help text, can be used for all sub commands
.TP
\-v|\-\-version
shows the current version
.TP
\-c|\-\-config
select which section of the config file to use
.TP
\-\-host
manually selects the host to talk to, this is a fqdn or IP w/o the protocol
.TP
\-u|\-\-user
specifies the user to authorize with
.TP
\-P|\-\-password
specifies the password to authenticate with
.TP
\-p
as part of any
.B list
command the \-p option outputs the data in parsable format separating
the columns by a ':'
.TP
\-H
as part of any
.B list
command the \-H option will suppress the header to be printed making
parsing easier
.TP
\-\-fmt FMT
as part of any
.B list
command this defines the fields to be printed in order,
.B FMT
is a ',' separated list without whitespaces
.SH COMMANDS
.TP
datasets list [\-p] [\-H] [\-\-fmt FMT]
This command lists the datasets currently available on the server.

Valid choices for
.B FMT
are: uuid, name, version, type and description.
.TP
datasets get <uuid|name>
This command returns the JSON representation of a dataset object
stored in the fifo server.

Where the name is combined from name-version (i.e. base64-1.9.1)
.TP
datasets delete <uuid|name>
Deletes a dataset from the FiFo server, also the linked image will
be removed from the database.
.B Be careful
this can't be undone!

No VM's running the dataset will be affected and the dataset will
.B NOT
be removed from the hypervisors.
.TP
dtrace list [\-p] [\-H] [\-\-fmt FMT]
This command lists the dtrace scripts currently available on the
server.

Valid choices for
.B FMT
are: uuid and name.
.TP
dtrace get <uuid|name>
This command returns the JSON representation of a dtrace script
object stored in the fifo server.
.TP
dtrace delete <uuid|name>
Deletes a dtrace script from the FiFo server.
.B Be careful
this can't be undone!
.TP
groups list [\-p] [\-H] [\-\-fmt FMT]
This command lists the groups currently available on the server.

Valid choices for
.B FMT
are: uuid and name.
.TP
groups get <uuid|name>
This command returns the JSON representation of a group object stored
in the fifo server.
.TP
groups delete <uuid|name>
Deletes a group from the FiFo server.
.B Be careful
this can't be undone!

Please mind that users will not be automatically removed from the
group. While this will not cause problems it might end up cluttering
the data base.
.TP
groups create [\-p] NAME
Creates a new group, if \-p is passed only the uuid is returned.
.TP
groups grant GROUP PERM...
Grants a group a permission where

.B GROUP
is the uuid of the group and

.B PERM
is one or more permission elements, i.e. cloud vms create
.TP
org list [\-p] [\-H] [\-\-fmt FMT]
This command lists the orgs currently available on the server.

Valid choices for
.B FMT
are: uuid, name.
.TP
orgs get <uuid|name>
This command returns the JSON representation of a org object stored
in the fifo server.
.TP
orgs delete <uuid|name>
Deletes a organisation from the FiFo server.
.TP
orgs list [\-p] [\-H] [\-\-fmt FMT]
This command lists the organisations currently available on the server.

Valid choices for
.B FMT
are: uuid, name.
.TP
orgs create [\-p] NAME
Creates a new Org, if \-p is passed only the uuid is returned.
.TP
hypervisors list [\-p] [\-H] [\-\-fmt FMT]
This command lists the groups currently available on the server.

Valid choices for
.B FMT
are: name, free, used, total, smartos, ip.

Where free, used and total stand for memory usage and smartos
represents the current SmartOS version running on the hypervisor.
.TP
hypervisors get <uuid|name>
This command returns the JSON representation of a hypervisor object
stored in the fifo server.
.TP
networks list [\-p] [\-H] [\-\-fmt FMT]
This command lists the networks currently available on the server.

Valid choices for
.B FMT
are: uuid, name, ipranges.
.TP
network get <uuid|name>
This command returns the JSON representation of a network object stored
in the fifo server.
.TP
ipranges delete <uuid|name>
Deletes a network from the FiFo server.
.TP
ipranges list [\-p] [\-H] [\-\-fmt FMT]
This command lists the networks currently available on the server.

Valid choices for
.B FMT
are: uuid, name, tag, network, first, next, last, gateway and netmask.
.TP
ipranges get <uuid|name>
This command returns the JSON representation of a network object stored
in the fifo server.
.TP
ipranges delete <uuid|name>
Deletes a network from the FiFo server.
.TP
packages list [\-p] [\-H] [\-\-fmt FMT]
This command lists the packages currently available on the server.

Valid choices for
.B FMT
are: uuid, name, title, quota and ram.
.TP
packages get <uuid|name>
This command returns the JSON representation of a package object stored
in the fifo server.
.TP
packages delete <uuid|name>
Deletes a package from the FiFo server. This does not affect VM's
currently using the package.
.TP
packages create <name>
                \-\-memory|\-m MEMORY[B|KB|MB|GB|TB|PB|EB]
                \-\-quota|\-q QUOTA[B|KB|MB|GB|TB|PB|EB]
                \-\-cpu_cap|\-c CAP
                \-\-requirement|\-r WIGHT ATTR COND VAL
                \-\-scale|\-s ATTR LOW HIGH
                \-\-random|\-R LOW HIGH
Creates a new package, memory, quota, cpu_cap and name are requried. In addition one or more requirement, scale, or random rule can be added.

.B \-\-requirement
rules are either enforced, forbidden or gives points to a hypervisor, they are used to rate and find the best hypervisor.

.B \-\-scale
rules help to give points to hypervisor based on their position in a linar scale over a given attirbute

.B \-\-random
rules just generate a random number of points for each hypervisor.

.B MEMORY
is given in bytes with optional modifyers of scale, please be aware that the minimal unit is 1MB.

.B QUOTA
is given in bytes with optional modifyers of scale, please be aware that the minimal unit is 1GB.

.B CAP
is the percentage of cpu cores, meaning 100 equals 1 core, 200 equals 2 cores, etc.

.B WIGHT
can be one of
.B must
,
.B cant
or am
.B integer
(either positive or negative).

.B ATTR
is a json path towards the attribute to look up, something like resources.free-memory

.B COND
is the compare condition one of >=, |>, =<, <, =:=, =/=, subset, superset, disjoint, element

.B VAL
is the value to compare against, it can either be a string or a number, currently arrays are not supported

.B LOW
and
.B HIGH
are integers where LOW < HIGH.

.TP
users list [\-p] [\-H] [\-\-fmt FMT]
This command lists the users currently available on the server.

Valid choices for
.B FMT
are: uuid, name, groups.
.TP
users get <uuid|name>
This command returns the JSON representation of a user object stored
in the fifo server.
.TP
user delete <uuid|name>
Deletes a group from the FiFo server.

Please mind that groups will not be automatically removed from the
user. While this will not cause problems it might end up cluttering
the data base.
.TP
users create [\-p] [\-\-password|\-P PASS] [\-\-group|\-g GROUP] [\-\-organization|\-o ORG] NAME
Creates a new user and optionally sets the password, group and orgnaistation. If \-p is passed only the UUID is returned.
.TP
users grant USER PERM...
Grants a user a permission where.

.B USER
is the uuid of the user.

.B PERM
is one or more permission elements, i.e. cloud vms create
.TP
vms list [\-p] [\-H] [\-\-fmt FMT]
This command lists the users currently available on the server.

Valid choices for
.B FMT
are: uuid, alias, ip, state and hypervisor.
.TP
vms get <uuid|alias>
This command returns the JSON representation of a vm's configuration
as stored in teh Fifo server.

If multiple VM's with the same alias exist the first one found will
be returned, since there is no guaranteed order the result may vary.
.TP
vms info <uuid|alias>
This command gets the info section of the VM containing for example
VNC information (only applicable for KVM VMs).
.TP
vms metadata <uuid|alias>
Retrieves the FiFo metadata associated with the VM.
.TP
vms delete <uuid|alias> [\-l]
Deletes a group from the FiFo server.

.B Beware
this can't be undone all data associated with this VM, along with
all of it's snapshots will be deleted forever!

If \-l is passed the vm is only deleted
from the hypervisor but not from the system and goes into a stored state.
.TP
vms svcs [\-a] [\-p] [\-H] [\-j] <uuid|alias>
Returns the status of the SMF services on the zone, only really makes sense for
SmartOS zones and not for KVM machines since there is no visibility inside
the KVM.

\-a will list all servies even disabled ones.

\-p will print in a consumable tab seperated format.

\-H will supress the header being printed.

\-j will print the full JSON.
.TP
vms svcadm <uuid|alias> enable|disable|clear <service>
Changes toe state of <service> on the given vm <uuid>.
.TP
vms create \-\-package|\-p <package uuid|name> \-\-dataset|\-d <dataset uuid|name> [\-\-file|\-f <config json file>]
This commands creates a new VM on the FiFo system. Both <package uuid>
and <dataset uuid> have to be valid uuid's or names. If uuid's are passed
no checks are done on the client side.

If no config.json file is given as argument it is read from the
STDIN. Please see fifo-vmconfig(5) for details on the structure of
the file.
.TP
vms start <uuid|alias>
Starts the VM on the server, this will do no harm when the VM is
already in a running or booting state.
.TP
vms stop [\-f] <uuid|alias>
Stops a VM on the server, if the \-f option is given this is forced.
The command does no harm to already stopped VM's. Non the less the
\-f option can be
.B harmful
to programs running in the VM.
.TP
vm reboot [\-f] <uuid|alias>
.TP
Set the maximum speed to 8 speed cdrom:
Reboots a VM on the server, if the \-f option is given this is
forced. The command does no harm to already stopped VM's. Non the
less the \-f option can be
.B harmful
to programs running in the VM.
.TP
vms snapshots <vm uuid|alias> list [\-p] [\-H] [\-\-fmt FMT]
This command lists the snapshots registered for the given <vm uuid>.

Valid choices for
.B FMT
are: uuid, timestamp and comment.
.TP
vms snapshots <vm uuid> get <uuid|name>
This command returns the JSON representation of a snapshot configuration
as stored in teh FiFo server.
.TP
vms snapshots <vm uuid|alias> create "<comment>"
Creates a new snapshot of the <vm uuid>, it is advised to power down
the VM for this action even so it is technically working on running VM's
but might leave applications in a broken state.
.TP
vms snapshots <vm uuid|alias> delete <uuid|name>
Removes a snapshot from the hypervisor.
.TP
vms snapshots <vm uuid|alias> rollback <uuid>
Rolls back the state of a VM, the VM has to be powered off for this. Be
aware that all snapshots newer then <uuid> will be deleted as part of
this process.
.TP
vms backups <vm uuid|alias> list [\-p] [\-H] [\-\-fmt FMT]
This command lists the backups for for the given <vm uuid>.

Valid choices for
.B FMT
are: uuid, timestamp, parent, local, size and comment.
.TP
vms backups <vm uuid> get <uuid|name>
This command returns the JSON representation of a backup configuration
as stored in teh FiFo server.
.TP
vms backup <vm uuid|alias> create [\-d] [\-\-parent parent] [\-x] "<comment>"
Creates a new backup of the <vm uuid>, it is advised to power down
the VM for this action even so it is technically working on running VM's
but might leave applications in a broken state. By default a full backup
will be created this can be changed by passing the \-\-parent option with
the
.B uuid
of the parent snapshot.

If \-d is passed no local copy will be left on the hypervisor unless
\-\-parent is passed then the new snapshot is keeped but the parent is
deleted.

The \-x option will also upload the VM's .xml config file, this will
be used to recreate snapshots after total node failure.
.TP
vms backup <vm uuid|alias> delete [\-l] <uuid|name>
Removes the backup, if \-l is passed it will stay in the cloud storage
and only be removed form the hypervisor.
.TP
vms backup <vm uuid|alias> restore [\-\-hypervisor <hypervisor>] <uuid>
Restores the backup, trying to find the quickeset way to restore using
combinations of local, full an incremental backups.

If \-\-hypervisor is passed the VM is restored onto a specific hypervisor.
.SH EXAMPLES
.TP
Lists all VM's in parsable format:
.B fifo
vms list \-p \-H
.PP
.TP
Restore maximum speed:
.B fifo
vms create
\-\-package 6fbe6997-e662-4235-b878-3bea5d05d9f5
\-\-dataset cf7e2f40-9276-11e2-af9a-0bad2233fb0b
\-\-config example.json
.PP
.SH EXIT STATUS
fifo returns zero on a successful execution and one when a error
occurred printing some details of the error.
.SH AUTHOR
Heinz N. 'Licenser' Gies (heinz (at) licenser.net)
.SH SEE ALSO
fifo-vmconfig(5)
